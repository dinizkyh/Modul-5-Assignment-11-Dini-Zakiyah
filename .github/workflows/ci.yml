name: CI/CD Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

env:
  NODE_VERSION: '20.x'

jobs:
  # Quick test job for fast feedback
  quick-test:
    name: Quick Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm install
        
      - name: Run tests
        run: npm run test:ci
        continue-on-error: true

  # Comprehensive test job with coverage and multiple Node versions
  comprehensive-test:
    name: Comprehensive Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Install dependencies
        run: npm install
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true
        
      - name: Build project
        run: npm run build
        continue-on-error: true
        
      - name: Run unit tests with coverage
        run: npm run test:ci
        continue-on-error: true
        env:
          CI: true
        
      - name: Check coverage thresholds
        continue-on-error: true
        run: |
          echo "Checking if coverage meets minimum thresholds..."
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-final.json'));
            const totals = coverage.total;
            const minCoverage = 80;
            
            console.log('Coverage Summary:');
            console.log('Statements:', totals.statements.pct + '%');
            console.log('Branches:', totals.branches.pct + '%');
            console.log('Functions:', totals.functions.pct + '%');
            console.log('Lines:', totals.lines.pct + '%');
            
            if (totals.statements.pct < minCoverage || 
                totals.branches.pct < minCoverage || 
                totals.functions.pct < minCoverage || 
                totals.lines.pct < minCoverage) {
              console.error('Coverage below minimum threshold of ' + minCoverage + '%');
              process.exit(1);
            }
            console.log('✅ All coverage thresholds met!');
          "
        
      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-${{ github.sha }}
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-final.json'));
              const totals = coverage.total;
              
              const comment = `## 📊 Test Coverage Report
              
              | Metric | Coverage |
              |--------|----------|
              | Statements | ${totals.statements.pct}% |
              | Branches | ${totals.branches.pct}% |
              | Functions | ${totals.functions.pct}% |
              | Lines | ${totals.lines.pct}% |
              
              ${totals.statements.pct >= 80 ? '✅' : '❌'} Coverage is ${totals.statements.pct >= 80 ? 'above' : 'below'} 80% threshold.
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read coverage file:', error.message);
            }

  # Security and dependency check
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm install
        
      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
        
      - name: Check for outdated dependencies
        run: npm outdated
        continue-on-error: true
